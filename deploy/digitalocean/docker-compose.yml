version: '3.8'

# DigitalOcean Production Deployment
# This configuration is optimized for DigitalOcean Droplets or App Platform

services:
  # Main TEL Cognitive Platform App
  simstudio:
    image: ghcr.io/your-org/tel-simstudio:latest
    container_name: tel-simstudio
    restart: unless-stopped
    ports:
      - '3000:3000'
    deploy:
      resources:
        limits:
          memory: 6G
        reservations:
          memory: 2G
    environment:
      - DATABASE_URL=${DATABASE_URL}
      - BETTER_AUTH_URL=${NEXT_PUBLIC_APP_URL}
      - NEXT_PUBLIC_APP_URL=${NEXT_PUBLIC_APP_URL}
      - BETTER_AUTH_SECRET=${BETTER_AUTH_SECRET}
      - ENCRYPTION_KEY=${ENCRYPTION_KEY}
      - FREESTYLE_API_KEY=${FREESTYLE_API_KEY:-}
      - GOOGLE_CLIENT_ID=${GOOGLE_CLIENT_ID:-}
      - GOOGLE_CLIENT_SECRET=${GOOGLE_CLIENT_SECRET:-}
      - GITHUB_CLIENT_ID=${GITHUB_CLIENT_ID:-}
      - GITHUB_CLIENT_SECRET=${GITHUB_CLIENT_SECRET:-}
      - RESEND_API_KEY=${RESEND_API_KEY:-}
      - DEEP_RESEARCH_URL=http://deep-research:3001
      - NODE_ENV=production
      - NEXT_TELEMETRY_DISABLED=1
      - VERCEL_TELEMETRY_DISABLED=1
    depends_on:
      deep-research:
        condition: service_healthy
    healthcheck:
      test: ['CMD', 'wget', '--spider', '--quiet', 'http://127.0.0.1:3000/health']
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - tel-network
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # Piren Deep Research Service
  deep-research:
    image: ghcr.io/your-org/tel-deep-research:latest
    container_name: tel-deep-research
    restart: unless-stopped
    ports:
      - '3001:3000'
    deploy:
      resources:
        limits:
          memory: 4G
        reservations:
          memory: 1G
    environment:
      # AI Providers
      - GOOGLE_GENERATIVE_AI_API_KEY=${GOOGLE_API_KEY:-}
      - ANTHROPIC_API_KEY=${ANTHROPIC_API_KEY:-}
      - OPENAI_API_KEY=${OPENAI_API_KEY:-}
      - DEEPSEEK_API_KEY=${DEEPSEEK_API_KEY:-}
      - XAI_API_KEY=${XAI_API_KEY:-}
      - MISTRAL_API_KEY=${MISTRAL_API_KEY:-}
      - AZURE_OPENAI_API_KEY=${AZURE_OPENAI_API_KEY:-}
      - OPENROUTER_API_KEY=${OPENROUTER_API_KEY:-}
      # Search Providers
      - TAVILY_API_KEY=${TAVILY_API_KEY:-}
      - FIRECRAWL_API_KEY=${FIRECRAWL_API_KEY:-}
      - EXA_API_KEY=${EXA_API_KEY:-}
      - SEARXNG_API_URL=${SEARXNG_API_URL:-}
      - BOCHA_API_KEY=${BOCHA_API_KEY:-}
      # App Configuration
      - NEXT_PUBLIC_BUILD_MODE=standalone
      - NODE_ENV=production
      - NEXT_TELEMETRY_DISABLED=1
    healthcheck:
      test: ['CMD', 'wget', '--spider', '--quiet', 'http://127.0.0.1:3000']
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    networks:
      - tel-network
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # Nginx reverse proxy
  nginx:
    image: nginx:alpine
    container_name: tel-nginx
    restart: unless-stopped
    ports:
      - '80:80'
      - '443:443'
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
      - certbot_data:/var/www/certbot:ro
    depends_on:
      - simstudio
      - deep-research
    networks:
      - tel-network
    logging:
      driver: "json-file"
      options:
        max-size: "5m"
        max-file: "3"

  # Certbot for SSL certificates
  certbot:
    image: certbot/certbot
    container_name: tel-certbot
    volumes:
      - certbot_data:/var/www/certbot
      - ./ssl:/etc/letsencrypt
    command: certonly --webroot --webroot-path=/var/www/certbot --email ${SSL_EMAIL} --agree-tos --no-eff-email -d ${DOMAIN_NAME}
    networks:
      - tel-network

volumes:
  certbot_data:
    driver: local

networks:
  tel-network:
    driver: bridge